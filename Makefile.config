#=========================================================================
# GLV makefile configuration
#=========================================================================

#=========================================================================
# Uncomment your system -or- use command-line arguments, e.g.,
# PLATFORM='platform' ARCH='arch'
#=========================================================================

# Operating system; macosx, linux, or windows
# Architecture; 32, 64, or 32_64 (macosx only)

UNAME := $(shell uname)
ifeq ($(UNAME), Linux)
	PLATFORM	= linux
else ifeq ($(UNAME), Darwin)
	PLATFORM	= macosx
else
	PLATFORM	= windows
endif

UNAMEM := $(shell uname -m)
ifeq ($(UNAMEM), x86_64)
	ARCH = 32_64
else
	ARCH = 32
endif

# Build configuration
BUILD_CONFIG	= release
STRICT_WARNINGS = 1

# Window binding (comment out for none)
WINDOW_BINDING = GLUT

USE_OPENGL_ES = 0

#=========================================================================
# Customize to fit your system
#=========================================================================
PREFIX		= /usr/local
CONFPREFIX	= $(PREFIX)/etc
MANPREFIX	= $(PREFIX)/share/man
AR		= ar cr
CC		= g++
RANLIB		= ranlib
LIB_NAME	= glv
SLIB_EXT	= a

LIB_DIRS	=
INC_DIRS	= include
CFLAGS		= -Wall -I/usr/include
LFLAGS		= -lm -lstdc++ -L/usr/lib

BUILD_DIR	= build
SRC_DIR		= src
TEST_DIR	= test
EXAMPLE_DIR	= example

# These are defined according to platform
DLIB_EXT	=
DLIB_OPT	=


#=========================================================================
# DO NOT EDIT BELOW!
#=========================================================================
#-------------------------------------------------------------------------
# Platform specific section
#-------------------------------------------------------------------------

# Linux:
ifeq ($(PLATFORM), linux)
	ifeq ($(ARCH), 32)
		CFLAGS += -m32
	else ifeq ($(ARCH), 64)
		CFLAGS += -m64
	endif
	LFLAGS += -lGLEW -lGLU -lGL
	CFLAGS += -DLINUX
	DLIB_EXT = so
	DLIB_OPT = shared

# Mac OSX:
else ifeq ($(PLATFORM), macosx)
	ifeq ($(ARCH), 32)
		CFLAGS += -arch i386
	else ifeq ($(ARCH), 64)
		CFLAGS += -arch x86_64
	else ifeq ($(ARCH), 32_64)
		CFLAGS += -arch i386 -arch x86_64
	endif
	LFLAGS += -framework AGL -framework OpenGL
	DLIB_EXT = dylib
	DLIB_OPT = dynamiclib

# Windows:
else ifeq ($(PLATFORM), windows)
endif

BINDING_SRC = 
ifeq ($(WINDOW_BINDING), GLUT)
	BINDING_SRC = glv_binding_glut.cpp
	ifeq ($(PLATFORM), linux)
		LFLAGS += -lglut
	else ifeq ($(PLATFORM), macosx)
		LFLAGS += -framework GLUT
	endif
endif

ifneq ($(USE_OPENGL_ES), 0)
	CFLAGS += -DGLV_USE_OPENGL_ES
endif

#-------------------------------------------------------------------------
# Finalize compilation flags
#-------------------------------------------------------------------------
ifeq ($(BUILD_CONFIG), release)
	CFLAGS += -O3 -fpeel-loops
else
endif

ifneq ($(STRICT_WARNINGS), 0)
	CFLAGS += \
		-Wreturn-type -Wnon-virtual-dtor -Woverloaded-virtual \
		-Wformat -Wmissing-braces -Wparentheses -Wswitch \
		-Wunused-variable -Wsign-compare -Wno-unknown-pragmas
endif

#-------------------------------------------------------------------------
# Define dependent variables
#-------------------------------------------------------------------------
SLIB_FILE	= lib$(LIB_NAME).$(SLIB_EXT)
DLIB_FILE	= lib$(LIB_NAME).$(DLIB_EXT)
BIN_DIR		= $(BUILD_DIR)/$(BUILD_CONFIG)
OBJ_DIR		= $(BIN_DIR)/obj
VPATH		= $(SRC_DIR) $(TEST_DIR) $(EXAMPLE_DIR)
