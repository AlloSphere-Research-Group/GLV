/******************************************************************************
* Copyright (C) 2003-2004 by Fabio Guerra and Cleyde Marlyse.
* All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining
* a copy of this software and associated documentation files (the
* "Software"), to deal in the Software without restriction, including
* without limitation the rights to use, copy, modify, merge, publish,
* distribute, sublicense, and/or sell copies of the Software, and to
* permit persons to whom the Software is furnished to do so, subject to
* the following conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
******************************************************************************/

#ifndef __LUAGL_H__
#define __LUAGL_H__

#ifdef __cplusplus
extern "C" {
#endif

#include "lua.h"
#include "lauxlib.h"
#include "lualib.h"

#include <OpenGL/gl.h>
#include <OpenGL/glext.h>
#include <OpenGL/glu.h>

#define LUAGL_API extern

#ifndef TABLE_ENTRY
#define TABLE_ENTRY(PREFIX, NAME)		{ #NAME, PREFIX##_##NAME }
#endif

LUAGL_API int luaopen_opengl (lua_State *L);
extern GLenum get_gl_enum(lua_State *L, int index);

#ifdef __cplusplus
}
#endif

#define ENUM_ERROR (GLenum)-2

typedef struct gl_str_value {
  const char *str;
  GLenum value;
} gl_str_value;

static const gl_str_value gl_str[] = {
		/* Version */
		TABLE_ENTRY(GL, VERSION_1_1),
		TABLE_ENTRY(GL, VERSION_1_2),
		TABLE_ENTRY(GL, VERSION_1_3),
		TABLE_ENTRY(GL, VERSION_1_4),
		TABLE_ENTRY(GL, VERSION_1_5),

		/* AccumOp */
		TABLE_ENTRY(GL, ACCUM),
		TABLE_ENTRY(GL, LOAD),
		TABLE_ENTRY(GL, RETURN),
		TABLE_ENTRY(GL, MULT),
		TABLE_ENTRY(GL, ADD),

		/* AlphaFunction */
		TABLE_ENTRY(GL, NEVER),
		TABLE_ENTRY(GL, LESS),
		TABLE_ENTRY(GL, EQUAL),
		TABLE_ENTRY(GL, LEQUAL),
		TABLE_ENTRY(GL, GREATER),
		TABLE_ENTRY(GL, NOTEQUAL),
		TABLE_ENTRY(GL, GEQUAL),
		TABLE_ENTRY(GL, ALWAYS),

		/* AttribMask */
		TABLE_ENTRY(GL, CURRENT_BIT),
		TABLE_ENTRY(GL, POINT_BIT),
		TABLE_ENTRY(GL, LINE_BIT),
		TABLE_ENTRY(GL, POLYGON_BIT),
		TABLE_ENTRY(GL, POLYGON_STIPPLE_BIT),
		TABLE_ENTRY(GL, PIXEL_MODE_BIT),
		TABLE_ENTRY(GL, LIGHTING_BIT),
		TABLE_ENTRY(GL, FOG_BIT),
		TABLE_ENTRY(GL, DEPTH_BUFFER_BIT),
		TABLE_ENTRY(GL, ACCUM_BUFFER_BIT),
		TABLE_ENTRY(GL, STENCIL_BUFFER_BIT),
		TABLE_ENTRY(GL, VIEWPORT_BIT),
		TABLE_ENTRY(GL, TRANSFORM_BIT),
		TABLE_ENTRY(GL, ENABLE_BIT),
		TABLE_ENTRY(GL, COLOR_BUFFER_BIT),
		TABLE_ENTRY(GL, HINT_BIT),
		TABLE_ENTRY(GL, EVAL_BIT),
		TABLE_ENTRY(GL, LIST_BIT),
		TABLE_ENTRY(GL, TEXTURE_BIT),
		TABLE_ENTRY(GL, SCISSOR_BIT),
		TABLE_ENTRY(GL, ALL_ATTRIB_BITS),

		/* BeginMode */
		TABLE_ENTRY(GL, POINTS),
		TABLE_ENTRY(GL, LINES),
		TABLE_ENTRY(GL, LINE_LOOP),
		TABLE_ENTRY(GL, LINE_STRIP),
		TABLE_ENTRY(GL, TRIANGLES),
		TABLE_ENTRY(GL, TRIANGLE_STRIP),
		TABLE_ENTRY(GL, TRIANGLE_FAN),
		TABLE_ENTRY(GL, QUADS),
		TABLE_ENTRY(GL, QUAD_STRIP),
		TABLE_ENTRY(GL, POLYGON),

		/* BlendingFactorDest */
		TABLE_ENTRY(GL, ZERO),
		TABLE_ENTRY(GL, ONE),
		TABLE_ENTRY(GL, SRC_COLOR),
		TABLE_ENTRY(GL, ONE_MINUS_SRC_COLOR),
		TABLE_ENTRY(GL, SRC_ALPHA),
		TABLE_ENTRY(GL, ONE_MINUS_SRC_ALPHA),
		TABLE_ENTRY(GL, DST_ALPHA),
		TABLE_ENTRY(GL, ONE_MINUS_DST_ALPHA),
		TABLE_ENTRY(GL, DST_COLOR),
		TABLE_ENTRY(GL, ONE_MINUS_DST_COLOR),
		TABLE_ENTRY(GL, SRC_ALPHA_SATURATE),

		/* Boolean */
		TABLE_ENTRY(GL, TRUE),
		TABLE_ENTRY(GL, FALSE),

		/* ClipPlaneName */
		TABLE_ENTRY(GL, CLIP_PLANE0),
		TABLE_ENTRY(GL, CLIP_PLANE1),
		TABLE_ENTRY(GL, CLIP_PLANE2),
		TABLE_ENTRY(GL, CLIP_PLANE3),
		TABLE_ENTRY(GL, CLIP_PLANE4),
		TABLE_ENTRY(GL, CLIP_PLANE5),

		/* DataType */
		TABLE_ENTRY(GL, BYTE),
		TABLE_ENTRY(GL, UNSIGNED_BYTE),
		TABLE_ENTRY(GL, SHORT),
		TABLE_ENTRY(GL, UNSIGNED_SHORT),
		TABLE_ENTRY(GL, INT),
		TABLE_ENTRY(GL, UNSIGNED_INT),
		TABLE_ENTRY(GL, FLOAT),
		TABLE_ENTRY(GL, 2_BYTES),
		TABLE_ENTRY(GL, 3_BYTES),
		TABLE_ENTRY(GL, 4_BYTES),
		TABLE_ENTRY(GL, DOUBLE),

		/* DrawBufferMode */
		TABLE_ENTRY(GL, NONE),
		TABLE_ENTRY(GL, FRONT_LEFT),
		TABLE_ENTRY(GL, FRONT_RIGHT),
		TABLE_ENTRY(GL, BACK_LEFT),
		TABLE_ENTRY(GL, BACK_RIGHT),
		TABLE_ENTRY(GL, FRONT),
		TABLE_ENTRY(GL, BACK),
		TABLE_ENTRY(GL, LEFT),
		TABLE_ENTRY(GL, FRONT_AND_BACK),
		TABLE_ENTRY(GL, AUX0),
		TABLE_ENTRY(GL, AUX1),
		TABLE_ENTRY(GL, AUX2),
		TABLE_ENTRY(GL, AUX3),

		/* ErrorCode */
		TABLE_ENTRY(GL, NO_ERROR),
		TABLE_ENTRY(GL, INVALID_ENUM),
		TABLE_ENTRY(GL, INVALID_VALUE),
		TABLE_ENTRY(GL, INVALID_OPERATION),
		TABLE_ENTRY(GL, STACK_OVERFLOW),
		TABLE_ENTRY(GL, STACK_UNDERFLOW),
		TABLE_ENTRY(GL, OUT_OF_MEMORY),

		/* FeedBackMode */
		TABLE_ENTRY(GL, 2D),
		TABLE_ENTRY(GL, 3D),
		TABLE_ENTRY(GL, 3D_COLOR),
		TABLE_ENTRY(GL, 3D_COLOR_TEXTURE),
		TABLE_ENTRY(GL, 4D_COLOR_TEXTURE),

		/* FeedBackToken */
		TABLE_ENTRY(GL, PASS_THROUGH_TOKEN),
		TABLE_ENTRY(GL, POINT_TOKEN),
		TABLE_ENTRY(GL, LINE_TOKEN),
		TABLE_ENTRY(GL, POLYGON_TOKEN),
		TABLE_ENTRY(GL, BITMAP_TOKEN),
		TABLE_ENTRY(GL, DRAW_PIXEL_TOKEN),
		TABLE_ENTRY(GL, COPY_PIXEL_TOKEN),
		TABLE_ENTRY(GL, LINE_RESET_TOKEN),

		/* FogMode */
		TABLE_ENTRY(GL, EXP),
		TABLE_ENTRY(GL, EXP2),

		/* FrontFaceDirection */
		TABLE_ENTRY(GL, CW),
		TABLE_ENTRY(GL, CCW),

		/* GetMapTarget */
		TABLE_ENTRY(GL, COEFF),
		TABLE_ENTRY(GL, ORDER),
		TABLE_ENTRY(GL, DOMAIN),

		/* GetTarget */
		TABLE_ENTRY(GL, CURRENT_COLOR),
		TABLE_ENTRY(GL, CURRENT_INDEX),
		TABLE_ENTRY(GL, CURRENT_NORMAL),
		TABLE_ENTRY(GL, CURRENT_TEXTURE_COORDS),
		TABLE_ENTRY(GL, CURRENT_RASTER_COLOR),
		TABLE_ENTRY(GL, CURRENT_RASTER_INDEX),
		TABLE_ENTRY(GL, CURRENT_RASTER_TEXTURE_COORDS),
		TABLE_ENTRY(GL, CURRENT_RASTER_POSITION),
		TABLE_ENTRY(GL, CURRENT_RASTER_POSITION_VALID),
		TABLE_ENTRY(GL, CURRENT_RASTER_DISTANCE),
		TABLE_ENTRY(GL, POINT_SMOOTH),
		TABLE_ENTRY(GL, POINT_SIZE),
		TABLE_ENTRY(GL, POINT_SIZE_RANGE),
		TABLE_ENTRY(GL, POINT_SIZE_GRANULARITY),
		TABLE_ENTRY(GL, LINE_SMOOTH),
		TABLE_ENTRY(GL, LINE_WIDTH),
		TABLE_ENTRY(GL, LINE_WIDTH_RANGE),
		TABLE_ENTRY(GL, LINE_WIDTH_GRANULARITY),
		TABLE_ENTRY(GL, LINE_STIPPLE),
		TABLE_ENTRY(GL, LINE_STIPPLE_PATTERN),
		TABLE_ENTRY(GL, LINE_STIPPLE_REPEAT),
		TABLE_ENTRY(GL, LIST_MODE),
		TABLE_ENTRY(GL, MAX_LIST_NESTING),
		TABLE_ENTRY(GL, LIST_BASE),
		TABLE_ENTRY(GL, LIST_INDEX),
		TABLE_ENTRY(GL, POLYGON_MODE),
		TABLE_ENTRY(GL, POLYGON_SMOOTH),
		TABLE_ENTRY(GL, POLYGON_STIPPLE),
		TABLE_ENTRY(GL, EDGE_FLAG),
		TABLE_ENTRY(GL, CULL_FACE),
		TABLE_ENTRY(GL, CULL_FACE_MODE),
		TABLE_ENTRY(GL, FRONT_FACE),
		TABLE_ENTRY(GL, LIGHTING),
		TABLE_ENTRY(GL, LIGHT_MODEL_LOCAL_VIEWER),
		TABLE_ENTRY(GL, LIGHT_MODEL_TWO_SIDE),
		TABLE_ENTRY(GL, LIGHT_MODEL_AMBIENT),
		TABLE_ENTRY(GL, SHADE_MODEL),
		TABLE_ENTRY(GL, COLOR_MATERIAL_FACE),
		TABLE_ENTRY(GL, COLOR_MATERIAL_PARAMETER),
		TABLE_ENTRY(GL, COLOR_MATERIAL),
		TABLE_ENTRY(GL, FOG),
		TABLE_ENTRY(GL, FOG_INDEX),
		TABLE_ENTRY(GL, FOG_DENSITY),
		TABLE_ENTRY(GL, FOG_START),
		TABLE_ENTRY(GL, FOG_END),
		TABLE_ENTRY(GL, FOG_MODE),
		TABLE_ENTRY(GL, FOG_COLOR),
		TABLE_ENTRY(GL, DEPTH_RANGE),
		TABLE_ENTRY(GL, DEPTH_TEST),
		TABLE_ENTRY(GL, DEPTH_WRITEMASK),
		TABLE_ENTRY(GL, DEPTH_CLEAR_VALUE),
		TABLE_ENTRY(GL, DEPTH_FUNC),
		TABLE_ENTRY(GL, ACCUM_CLEAR_VALUE),
		TABLE_ENTRY(GL, STENCIL_TEST),
		TABLE_ENTRY(GL, STENCIL_CLEAR_VALUE),
		TABLE_ENTRY(GL, STENCIL_FUNC),
		TABLE_ENTRY(GL, STENCIL_VALUE_MASK),
		TABLE_ENTRY(GL, STENCIL_FAIL),
		TABLE_ENTRY(GL, STENCIL_PASS_DEPTH_FAIL),
		TABLE_ENTRY(GL, STENCIL_PASS_DEPTH_PASS),
		TABLE_ENTRY(GL, STENCIL_REF),
		TABLE_ENTRY(GL, STENCIL_WRITEMASK),
		TABLE_ENTRY(GL, MATRIX_MODE),
		TABLE_ENTRY(GL, NORMALIZE),
		TABLE_ENTRY(GL, VIEWPORT),
		TABLE_ENTRY(GL, MODELVIEW_STACK_DEPTH),
		TABLE_ENTRY(GL, PROJECTION_STACK_DEPTH),
		TABLE_ENTRY(GL, TEXTURE_STACK_DEPTH),
		TABLE_ENTRY(GL, MODELVIEW_MATRIX),
		TABLE_ENTRY(GL, PROJECTION_MATRIX),
		TABLE_ENTRY(GL, TEXTURE_MATRIX),
		TABLE_ENTRY(GL, ATTRIB_STACK_DEPTH),
		TABLE_ENTRY(GL, CLIENT_ATTRIB_STACK_DEPTH),
		TABLE_ENTRY(GL, ALPHA_TEST),
		TABLE_ENTRY(GL, ALPHA_TEST_FUNC),
		TABLE_ENTRY(GL, ALPHA_TEST_REF),
		TABLE_ENTRY(GL, DITHER),
		TABLE_ENTRY(GL, BLEND_DST),
		TABLE_ENTRY(GL, BLEND_SRC),
		TABLE_ENTRY(GL, BLEND),
		TABLE_ENTRY(GL, LOGIC_OP_MODE),
		TABLE_ENTRY(GL, LOGIC_OP),
		TABLE_ENTRY(GL, INDEX_LOGIC_OP),
		TABLE_ENTRY(GL, COLOR_LOGIC_OP),
		TABLE_ENTRY(GL, AUX_BUFFERS),
		TABLE_ENTRY(GL, DRAW_BUFFER),
		TABLE_ENTRY(GL, READ_BUFFER),
		TABLE_ENTRY(GL, SCISSOR_BOX),
		TABLE_ENTRY(GL, SCISSOR_TEST),
		TABLE_ENTRY(GL, INDEX_CLEAR_VALUE),
		TABLE_ENTRY(GL, INDEX_WRITEMASK),
		TABLE_ENTRY(GL, COLOR_CLEAR_VALUE),
		TABLE_ENTRY(GL, COLOR_WRITEMASK),
		TABLE_ENTRY(GL, INDEX_MODE),
		TABLE_ENTRY(GL, RGBA_MODE),
		TABLE_ENTRY(GL, DOUBLEBUFFER),
		TABLE_ENTRY(GL, STEREO),
		TABLE_ENTRY(GL, RENDER_MODE),
		TABLE_ENTRY(GL, PERSPECTIVE_CORRECTION_HINT),
		TABLE_ENTRY(GL, POINT_SMOOTH_HINT),
		TABLE_ENTRY(GL, LINE_SMOOTH_HINT),
		TABLE_ENTRY(GL, FOG_HINT),
		TABLE_ENTRY(GL, TEXTURE_GEN_S),
		TABLE_ENTRY(GL, TEXTURE_GEN_T),
		TABLE_ENTRY(GL, TEXTURE_GEN_R),
		TABLE_ENTRY(GL, TEXTURE_GEN_Q),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_I),
		TABLE_ENTRY(GL, PIXEL_MAP_S_TO_S),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_R),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_G),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_B),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_A),
		TABLE_ENTRY(GL, PIXEL_MAP_R_TO_R),
		TABLE_ENTRY(GL, PIXEL_MAP_G_TO_G),
		TABLE_ENTRY(GL, PIXEL_MAP_B_TO_B),
		TABLE_ENTRY(GL, PIXEL_MAP_A_TO_A),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_I_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_S_TO_S_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_R_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_G_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_B_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_I_TO_A_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_R_TO_R_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_G_TO_G_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_B_TO_B_SIZE),
		TABLE_ENTRY(GL, PIXEL_MAP_A_TO_A_SIZE),
		TABLE_ENTRY(GL, UNPACK_SWAP_BYTES),
		TABLE_ENTRY(GL, UNPACK_LSB_FIRST),
		TABLE_ENTRY(GL, UNPACK_ROW_LENGTH),
		TABLE_ENTRY(GL, UNPACK_SKIP_ROWS),
		TABLE_ENTRY(GL, UNPACK_SKIP_PIXELS),
		TABLE_ENTRY(GL, UNPACK_ALIGNMENT),
		TABLE_ENTRY(GL, PACK_SWAP_BYTES),
		TABLE_ENTRY(GL, PACK_LSB_FIRST),
		TABLE_ENTRY(GL, PACK_ROW_LENGTH),
		TABLE_ENTRY(GL, PACK_SKIP_ROWS),
		TABLE_ENTRY(GL, PACK_SKIP_PIXELS),
		TABLE_ENTRY(GL, PACK_ALIGNMENT),
		TABLE_ENTRY(GL, MAP_COLOR),
		TABLE_ENTRY(GL, MAP_STENCIL),
		TABLE_ENTRY(GL, INDEX_SHIFT),
		TABLE_ENTRY(GL, INDEX_OFFSET),
		TABLE_ENTRY(GL, RED_SCALE),
		TABLE_ENTRY(GL, RED_BIAS),
		TABLE_ENTRY(GL, ZOOM_X),
		TABLE_ENTRY(GL, ZOOM_Y),
		TABLE_ENTRY(GL, GREEN_SCALE),
		TABLE_ENTRY(GL, GREEN_BIAS),
		TABLE_ENTRY(GL, BLUE_SCALE),
		TABLE_ENTRY(GL, BLUE_BIAS),
		TABLE_ENTRY(GL, ALPHA_SCALE),
		TABLE_ENTRY(GL, ALPHA_BIAS),
		TABLE_ENTRY(GL, DEPTH_SCALE),
		TABLE_ENTRY(GL, DEPTH_BIAS),
		TABLE_ENTRY(GL, MAX_EVAL_ORDER),
		TABLE_ENTRY(GL, MAX_LIGHTS),
		TABLE_ENTRY(GL, MAX_CLIP_PLANES),
		TABLE_ENTRY(GL, MAX_TEXTURE_SIZE),
		TABLE_ENTRY(GL, MAX_PIXEL_MAP_TABLE),
		TABLE_ENTRY(GL, MAX_ATTRIB_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_MODELVIEW_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_NAME_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_PROJECTION_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_TEXTURE_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_VIEWPORT_DIMS),
		TABLE_ENTRY(GL, MAX_CLIENT_ATTRIB_STACK_DEPTH),
		TABLE_ENTRY(GL, SUBPIXEL_BITS),
		TABLE_ENTRY(GL, INDEX_BITS),
		TABLE_ENTRY(GL, RED_BITS),
		TABLE_ENTRY(GL, GREEN_BITS),
		TABLE_ENTRY(GL, BLUE_BITS),
		TABLE_ENTRY(GL, ALPHA_BITS),
		TABLE_ENTRY(GL, DEPTH_BITS),
		TABLE_ENTRY(GL, STENCIL_BITS),
		TABLE_ENTRY(GL, ACCUM_RED_BITS),
		TABLE_ENTRY(GL, ACCUM_GREEN_BITS),
		TABLE_ENTRY(GL, ACCUM_BLUE_BITS),
		TABLE_ENTRY(GL, ACCUM_ALPHA_BITS),
		TABLE_ENTRY(GL, NAME_STACK_DEPTH),
		TABLE_ENTRY(GL, AUTO_NORMAL),
		TABLE_ENTRY(GL, MAP1_COLOR_4),
		TABLE_ENTRY(GL, MAP1_INDEX),
		TABLE_ENTRY(GL, MAP1_NORMAL),
		TABLE_ENTRY(GL, MAP1_TEXTURE_COORD_1),
		TABLE_ENTRY(GL, MAP1_TEXTURE_COORD_2),
		TABLE_ENTRY(GL, MAP1_TEXTURE_COORD_3),
		TABLE_ENTRY(GL, MAP1_TEXTURE_COORD_4),
		TABLE_ENTRY(GL, MAP1_VERTEX_3),
		TABLE_ENTRY(GL, MAP1_VERTEX_4),
		TABLE_ENTRY(GL, MAP2_COLOR_4),
		TABLE_ENTRY(GL, MAP2_INDEX),
		TABLE_ENTRY(GL, MAP2_NORMAL),
		TABLE_ENTRY(GL, MAP2_TEXTURE_COORD_1),
		TABLE_ENTRY(GL, MAP2_TEXTURE_COORD_2),
		TABLE_ENTRY(GL, MAP2_TEXTURE_COORD_3),
		TABLE_ENTRY(GL, MAP2_TEXTURE_COORD_4),
		TABLE_ENTRY(GL, MAP2_VERTEX_3),
		TABLE_ENTRY(GL, MAP2_VERTEX_4),
		TABLE_ENTRY(GL, MAP1_GRID_DOMAIN),
		TABLE_ENTRY(GL, MAP1_GRID_SEGMENTS),
		TABLE_ENTRY(GL, MAP2_GRID_DOMAIN),
		TABLE_ENTRY(GL, MAP2_GRID_SEGMENTS),
		TABLE_ENTRY(GL, TEXTURE_1D),
		TABLE_ENTRY(GL, TEXTURE_2D),
		TABLE_ENTRY(GL, FEEDBACK_BUFFER_POINTER),
		TABLE_ENTRY(GL, FEEDBACK_BUFFER_SIZE),
		TABLE_ENTRY(GL, FEEDBACK_BUFFER_TYPE),
		TABLE_ENTRY(GL, SELECTION_BUFFER_POINTER),
		TABLE_ENTRY(GL, SELECTION_BUFFER_SIZE),
		TABLE_ENTRY(GL, TEXTURE_WIDTH),
		TABLE_ENTRY(GL, TEXTURE_HEIGHT),
		TABLE_ENTRY(GL, TEXTURE_COMPONENTS),
		TABLE_ENTRY(GL, TEXTURE_INTERNAL_FORMAT),
		TABLE_ENTRY(GL, TEXTURE_BORDER_COLOR),
		TABLE_ENTRY(GL, TEXTURE_BORDER),

		/* HintMode */
		TABLE_ENTRY(GL, DONT_CARE),
		TABLE_ENTRY(GL, FASTEST),
		TABLE_ENTRY(GL, NICEST),

		/* LightName */
		TABLE_ENTRY(GL, LIGHT0),
		TABLE_ENTRY(GL, LIGHT1),
		TABLE_ENTRY(GL, LIGHT2),
		TABLE_ENTRY(GL, LIGHT3),
		TABLE_ENTRY(GL, LIGHT4),
		TABLE_ENTRY(GL, LIGHT5),
		TABLE_ENTRY(GL, LIGHT6),
		TABLE_ENTRY(GL, LIGHT7),

		/* LightParameter */
		TABLE_ENTRY(GL, AMBIENT),
		TABLE_ENTRY(GL, DIFFUSE),
		TABLE_ENTRY(GL, SPECULAR),
		TABLE_ENTRY(GL, POSITION),
		TABLE_ENTRY(GL, SPOT_DIRECTION),
		TABLE_ENTRY(GL, SPOT_EXPONENT),
		TABLE_ENTRY(GL, SPOT_CUTOFF),
		TABLE_ENTRY(GL, CONSTANT_ATTENUATION),
		TABLE_ENTRY(GL, LINEAR_ATTENUATION),
		TABLE_ENTRY(GL, QUADRATIC_ATTENUATION),

		/* ListMode */
		TABLE_ENTRY(GL, COMPILE),
		TABLE_ENTRY(GL, COMPILE_AND_EXECUTE),

		/* LogicOp */
		TABLE_ENTRY(GL, CLEAR),
		TABLE_ENTRY(GL, AND),
		TABLE_ENTRY(GL, AND_REVERSE),
		TABLE_ENTRY(GL, COPY),
		TABLE_ENTRY(GL, AND_INVERTED),
		TABLE_ENTRY(GL, NOOP),
		TABLE_ENTRY(GL, XOR),
		TABLE_ENTRY(GL, OR),
		TABLE_ENTRY(GL, NOR),
		TABLE_ENTRY(GL, EQUIV),
		TABLE_ENTRY(GL, INVERT),
		TABLE_ENTRY(GL, OR_REVERSE),
		TABLE_ENTRY(GL, COPY_INVERTED),
		TABLE_ENTRY(GL, OR_INVERTED),
		TABLE_ENTRY(GL, NAND),
		TABLE_ENTRY(GL, SET),

		/* MaterialParameter */
		TABLE_ENTRY(GL, EMISSION),
		TABLE_ENTRY(GL, SHININESS),
		TABLE_ENTRY(GL, AMBIENT_AND_DIFFUSE),
		TABLE_ENTRY(GL, COLOR_INDEXES),

		/* MatrixMode */
		TABLE_ENTRY(GL, MODELVIEW),
		TABLE_ENTRY(GL, PROJECTION),
		TABLE_ENTRY(GL, TEXTURE),

		/* PixelCopyType */
		TABLE_ENTRY(GL, COLOR),
		TABLE_ENTRY(GL, DEPTH),
		TABLE_ENTRY(GL, STENCIL),

		/* PixelFormat */
		TABLE_ENTRY(GL, COLOR_INDEX),
		TABLE_ENTRY(GL, STENCIL_INDEX),
		TABLE_ENTRY(GL, DEPTH_COMPONENT),
		TABLE_ENTRY(GL, RED),
		TABLE_ENTRY(GL, GREEN),
		TABLE_ENTRY(GL, BLUE),
		TABLE_ENTRY(GL, ALPHA),
		TABLE_ENTRY(GL, RGB),
		TABLE_ENTRY(GL, RGBA),
		TABLE_ENTRY(GL, LUMINANCE),
		TABLE_ENTRY(GL, LUMINANCE_ALPHA),

		/* PixelType */
		TABLE_ENTRY(GL, BITMAP),

		/* PolygonMode */
		TABLE_ENTRY(GL, POINT),
		TABLE_ENTRY(GL, LINE),
		TABLE_ENTRY(GL, FILL),

		/* RenderingMode */
		TABLE_ENTRY(GL, RENDER),
		TABLE_ENTRY(GL, FEEDBACK),
		TABLE_ENTRY(GL, SELECT),

		/* ShadingModel */
		TABLE_ENTRY(GL, FLAT),
		TABLE_ENTRY(GL, SMOOTH),

		/* StencilOp */
		TABLE_ENTRY(GL, KEEP),
		TABLE_ENTRY(GL, REPLACE),
		TABLE_ENTRY(GL, INCR),
		TABLE_ENTRY(GL, DECR),

		/* StringName */
		TABLE_ENTRY(GL, VENDOR),
		TABLE_ENTRY(GL, RENDERER),
		TABLE_ENTRY(GL, VERSION),
		TABLE_ENTRY(GL, EXTENSIONS),

		/* TextureCoordName */
		TABLE_ENTRY(GL, S),
		TABLE_ENTRY(GL, T),
		TABLE_ENTRY(GL, R),
		TABLE_ENTRY(GL, Q),

		/* TextureEnvMode */
		TABLE_ENTRY(GL, MODULATE),
		TABLE_ENTRY(GL, DECAL),

		/* TextureEnvParameter */
		TABLE_ENTRY(GL, TEXTURE_ENV_MODE),
		TABLE_ENTRY(GL, TEXTURE_ENV_COLOR),

		/* TextureEnvTarget */
		TABLE_ENTRY(GL, TEXTURE_ENV),

		/* TextureGenMode */
		TABLE_ENTRY(GL, EYE_LINEAR),
		TABLE_ENTRY(GL, OBJECT_LINEAR),
		TABLE_ENTRY(GL, SPHERE_MAP),

		/* TextureGenParameter */
		TABLE_ENTRY(GL, TEXTURE_GEN_MODE),
		TABLE_ENTRY(GL, OBJECT_PLANE),
		TABLE_ENTRY(GL, EYE_PLANE),

		/* TextureMagFilter */
		TABLE_ENTRY(GL, NEAREST),
		TABLE_ENTRY(GL, LINEAR),

		/* TextureParameterName */
		TABLE_ENTRY(GL, NEAREST_MIPMAP_NEAREST),
		TABLE_ENTRY(GL, LINEAR_MIPMAP_NEAREST),
		TABLE_ENTRY(GL, NEAREST_MIPMAP_LINEAR),
		TABLE_ENTRY(GL, LINEAR_MIPMAP_LINEAR),

		/* TextureParameterName */
		TABLE_ENTRY(GL, TEXTURE_MAG_FILTER),
		TABLE_ENTRY(GL, TEXTURE_MIN_FILTER),
		TABLE_ENTRY(GL, TEXTURE_WRAP_S),
		TABLE_ENTRY(GL, TEXTURE_WRAP_T),

		/* TextureWrapMode */
		TABLE_ENTRY(GL, CLAMP),
		TABLE_ENTRY(GL, REPEAT),

		/* ClientAttribMask */
		TABLE_ENTRY(GL, CLIENT_PIXEL_STORE_BIT),
		TABLE_ENTRY(GL, CLIENT_VERTEX_ARRAY_BIT),
		TABLE_ENTRY(GL, CLIENT_ALL_ATTRIB_BITS),

		/* polygon_offset */
		TABLE_ENTRY(GL, POLYGON_OFFSET_FACTOR),
		TABLE_ENTRY(GL, POLYGON_OFFSET_UNITS),
		TABLE_ENTRY(GL, POLYGON_OFFSET_POINT),
		TABLE_ENTRY(GL, POLYGON_OFFSET_LINE),
		TABLE_ENTRY(GL, POLYGON_OFFSET_FILL),

		/* texture */
		TABLE_ENTRY(GL, ALPHA4),
		TABLE_ENTRY(GL, ALPHA8),
		TABLE_ENTRY(GL, ALPHA12),
		TABLE_ENTRY(GL, ALPHA16),
		TABLE_ENTRY(GL, LUMINANCE4),
		TABLE_ENTRY(GL, LUMINANCE8),
		TABLE_ENTRY(GL, LUMINANCE12),
		TABLE_ENTRY(GL, LUMINANCE16),
		TABLE_ENTRY(GL, LUMINANCE4_ALPHA4),
		TABLE_ENTRY(GL, LUMINANCE6_ALPHA2),
		TABLE_ENTRY(GL, LUMINANCE8_ALPHA8),
		TABLE_ENTRY(GL, LUMINANCE12_ALPHA4),
		TABLE_ENTRY(GL, LUMINANCE12_ALPHA12),
		TABLE_ENTRY(GL, LUMINANCE16_ALPHA16),
		TABLE_ENTRY(GL, INTENSITY),
		TABLE_ENTRY(GL, INTENSITY4),
		TABLE_ENTRY(GL, INTENSITY8),
		TABLE_ENTRY(GL, INTENSITY12),
		TABLE_ENTRY(GL, INTENSITY16),
		TABLE_ENTRY(GL, R3_G3_B2),
		TABLE_ENTRY(GL, RGB4),
		TABLE_ENTRY(GL, RGB5),
		TABLE_ENTRY(GL, RGB8),
		TABLE_ENTRY(GL, RGB10),
		TABLE_ENTRY(GL, RGB12),
		TABLE_ENTRY(GL, RGB16),
		TABLE_ENTRY(GL, RGBA2),
		TABLE_ENTRY(GL, RGBA4),
		TABLE_ENTRY(GL, RGB5_A1),
		TABLE_ENTRY(GL, RGBA8),
		TABLE_ENTRY(GL, RGB10_A2),
		TABLE_ENTRY(GL, RGBA12),
		TABLE_ENTRY(GL, RGBA16),
		TABLE_ENTRY(GL, TEXTURE_RED_SIZE),
		TABLE_ENTRY(GL, TEXTURE_GREEN_SIZE),
		TABLE_ENTRY(GL, TEXTURE_BLUE_SIZE),
		TABLE_ENTRY(GL, TEXTURE_ALPHA_SIZE),
		TABLE_ENTRY(GL, TEXTURE_LUMINANCE_SIZE),
		TABLE_ENTRY(GL, TEXTURE_INTENSITY_SIZE),
		TABLE_ENTRY(GL, PROXY_TEXTURE_1D),
		TABLE_ENTRY(GL, PROXY_TEXTURE_2D),

		/* texture_object */
		TABLE_ENTRY(GL, TEXTURE_PRIORITY),
		TABLE_ENTRY(GL, TEXTURE_RESIDENT),
		TABLE_ENTRY(GL, TEXTURE_BINDING_1D),
		TABLE_ENTRY(GL, TEXTURE_BINDING_2D),
		TABLE_ENTRY(GL, TEXTURE_BINDING_3D),

		/* vertex_array */
		TABLE_ENTRY(GL, VERTEX_ARRAY),
		TABLE_ENTRY(GL, NORMAL_ARRAY),
		TABLE_ENTRY(GL, COLOR_ARRAY),
		TABLE_ENTRY(GL, INDEX_ARRAY),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY),
		TABLE_ENTRY(GL, EDGE_FLAG_ARRAY),
		TABLE_ENTRY(GL, VERTEX_ARRAY_SIZE),
		TABLE_ENTRY(GL, VERTEX_ARRAY_TYPE),
		TABLE_ENTRY(GL, VERTEX_ARRAY_STRIDE),
		TABLE_ENTRY(GL, NORMAL_ARRAY_TYPE),
		TABLE_ENTRY(GL, NORMAL_ARRAY_STRIDE),
		TABLE_ENTRY(GL, COLOR_ARRAY_SIZE),
		TABLE_ENTRY(GL, COLOR_ARRAY_TYPE),
		TABLE_ENTRY(GL, COLOR_ARRAY_STRIDE),
		TABLE_ENTRY(GL, INDEX_ARRAY_TYPE),
		TABLE_ENTRY(GL, INDEX_ARRAY_STRIDE),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY_SIZE),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY_TYPE),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY_STRIDE),
		TABLE_ENTRY(GL, EDGE_FLAG_ARRAY_STRIDE),
		TABLE_ENTRY(GL, VERTEX_ARRAY_POINTER),
		TABLE_ENTRY(GL, NORMAL_ARRAY_POINTER),
		TABLE_ENTRY(GL, COLOR_ARRAY_POINTER),
		TABLE_ENTRY(GL, INDEX_ARRAY_POINTER),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY_POINTER),
		TABLE_ENTRY(GL, EDGE_FLAG_ARRAY_POINTER),
		TABLE_ENTRY(GL, V2F),
		TABLE_ENTRY(GL, V3F),
		TABLE_ENTRY(GL, C4UB_V2F),
		TABLE_ENTRY(GL, C4UB_V3F),
		TABLE_ENTRY(GL, C3F_V3F),
		TABLE_ENTRY(GL, N3F_V3F),
		TABLE_ENTRY(GL, C4F_N3F_V3F),
		TABLE_ENTRY(GL, T2F_V3F),
		TABLE_ENTRY(GL, T4F_V4F),
		TABLE_ENTRY(GL, T2F_C4UB_V3F),
		TABLE_ENTRY(GL, T2F_C3F_V3F),
		TABLE_ENTRY(GL, T2F_N3F_V3F),
		TABLE_ENTRY(GL, T2F_C4F_N3F_V3F),
		TABLE_ENTRY(GL, T4F_C4F_N3F_V4F),

		/* bgra */
		TABLE_ENTRY(GL, BGR),
		TABLE_ENTRY(GL, BGRA),

		/* blend_color */
		TABLE_ENTRY(GL, CONSTANT_COLOR),
		TABLE_ENTRY(GL, ONE_MINUS_CONSTANT_COLOR),
		TABLE_ENTRY(GL, CONSTANT_ALPHA),
		TABLE_ENTRY(GL, ONE_MINUS_CONSTANT_ALPHA),
		TABLE_ENTRY(GL, BLEND_COLOR),

		/* blend_minmax */
		TABLE_ENTRY(GL, FUNC_ADD),
		TABLE_ENTRY(GL, MIN),
		TABLE_ENTRY(GL, MAX),
		TABLE_ENTRY(GL, BLEND_EQUATION),

		/* blend_subtract */
		TABLE_ENTRY(GL, FUNC_SUBTRACT),
		TABLE_ENTRY(GL, FUNC_REVERSE_SUBTRACT),

		/* color_matrix */
		TABLE_ENTRY(GL, COLOR_MATRIX),
		TABLE_ENTRY(GL, COLOR_MATRIX_STACK_DEPTH),
		TABLE_ENTRY(GL, MAX_COLOR_MATRIX_STACK_DEPTH),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_RED_SCALE),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_GREEN_SCALE),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_BLUE_SCALE),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_ALPHA_SCALE),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_RED_BIAS),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_GREEN_BIAS),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_BLUE_BIAS),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_ALPHA_BIAS),

		/* color_table */
		TABLE_ENTRY(GL, COLOR_TABLE ),
		TABLE_ENTRY(GL, POST_CONVOLUTION_COLOR_TABLE),
		TABLE_ENTRY(GL, POST_COLOR_MATRIX_COLOR_TABLE),
		TABLE_ENTRY(GL, PROXY_COLOR_TABLE),
		TABLE_ENTRY(GL, PROXY_POST_CONVOLUTION_COLOR_TABLE),
		TABLE_ENTRY(GL, PROXY_POST_COLOR_MATRIX_COLOR_TABLE),
		TABLE_ENTRY(GL, COLOR_TABLE_SCALE),
		TABLE_ENTRY(GL, COLOR_TABLE_BIAS),
		TABLE_ENTRY(GL, COLOR_TABLE_FORMAT),
		TABLE_ENTRY(GL, COLOR_TABLE_WIDTH),
		TABLE_ENTRY(GL, COLOR_TABLE_RED_SIZE),
		TABLE_ENTRY(GL, COLOR_TABLE_GREEN_SIZE),
		TABLE_ENTRY(GL, COLOR_TABLE_BLUE_SIZE),
		TABLE_ENTRY(GL, COLOR_TABLE_ALPHA_SIZE),
		TABLE_ENTRY(GL, COLOR_TABLE_LUMINANCE_SIZE),
		TABLE_ENTRY(GL, COLOR_TABLE_INTENSITY_SIZE),

		/* convolution */
		TABLE_ENTRY(GL, CONVOLUTION_1D ),
		TABLE_ENTRY(GL, CONVOLUTION_2D),
		TABLE_ENTRY(GL, SEPARABLE_2D),
		TABLE_ENTRY(GL, CONVOLUTION_BORDER_MODE),
		TABLE_ENTRY(GL, CONVOLUTION_FILTER_SCALE),
		TABLE_ENTRY(GL, CONVOLUTION_FILTER_BIAS),
		TABLE_ENTRY(GL, REDUCE),
		TABLE_ENTRY(GL, CONVOLUTION_FORMAT),
		TABLE_ENTRY(GL, CONVOLUTION_WIDTH),
		TABLE_ENTRY(GL, CONVOLUTION_HEIGHT),
		TABLE_ENTRY(GL, MAX_CONVOLUTION_WIDTH),
		TABLE_ENTRY(GL, MAX_CONVOLUTION_HEIGHT),
		TABLE_ENTRY(GL, POST_CONVOLUTION_RED_SCALE),
		TABLE_ENTRY(GL, POST_CONVOLUTION_GREEN_SCALE),
		TABLE_ENTRY(GL, POST_CONVOLUTION_BLUE_SCALE),
		TABLE_ENTRY(GL, POST_CONVOLUTION_ALPHA_SCALE),
		TABLE_ENTRY(GL, POST_CONVOLUTION_RED_BIAS),
		TABLE_ENTRY(GL, POST_CONVOLUTION_GREEN_BIAS),
		TABLE_ENTRY(GL, POST_CONVOLUTION_BLUE_BIAS),
		TABLE_ENTRY(GL, POST_CONVOLUTION_ALPHA_BIAS),
		TABLE_ENTRY(GL, CONSTANT_BORDER),
		TABLE_ENTRY(GL, REPLICATE_BORDER),
		TABLE_ENTRY(GL, CONVOLUTION_BORDER_COLOR),

		/* draw_range_elements */
		TABLE_ENTRY(GL, MAX_ELEMENTS_VERTICES),
		TABLE_ENTRY(GL, MAX_ELEMENTS_INDICES),

		/* histogram */
		TABLE_ENTRY(GL, HISTOGRAM),
		TABLE_ENTRY(GL, PROXY_HISTOGRAM),
		TABLE_ENTRY(GL, HISTOGRAM_WIDTH),
		TABLE_ENTRY(GL, HISTOGRAM_FORMAT),
		TABLE_ENTRY(GL, HISTOGRAM_RED_SIZE),
		TABLE_ENTRY(GL, HISTOGRAM_GREEN_SIZE),
		TABLE_ENTRY(GL, HISTOGRAM_BLUE_SIZE),
		TABLE_ENTRY(GL, HISTOGRAM_ALPHA_SIZE),
		TABLE_ENTRY(GL, HISTOGRAM_LUMINANCE_SIZE),
		TABLE_ENTRY(GL, HISTOGRAM_SINK),
		TABLE_ENTRY(GL, MINMAX_FORMAT),
		TABLE_ENTRY(GL, MINMAX_SINK),
		TABLE_ENTRY(GL, TABLE_TOO_LARGE),

		/* packed_pixels */
		TABLE_ENTRY(GL, UNSIGNED_BYTE_3_3_2),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_4_4_4_4),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_5_5_5_1),
		TABLE_ENTRY(GL, UNSIGNED_INT_8_8_8_8),
		TABLE_ENTRY(GL, UNSIGNED_INT_10_10_10_2),
		TABLE_ENTRY(GL, UNSIGNED_BYTE_2_3_3_REV),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_5_6_5),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_5_6_5_REV),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_4_4_4_4_REV),
		TABLE_ENTRY(GL, UNSIGNED_SHORT_1_5_5_5_REV),
		TABLE_ENTRY(GL, UNSIGNED_INT_8_8_8_8_REV),
		TABLE_ENTRY(GL, UNSIGNED_INT_2_10_10_10_REV),

		/* rescale_normal */
		TABLE_ENTRY(GL, RESCALE_NORMAL),

		/* separate_specular_color */
		TABLE_ENTRY(GL, LIGHT_MODEL_COLOR_CONTROL),
		TABLE_ENTRY(GL, SINGLE_COLOR),
		TABLE_ENTRY(GL, SEPARATE_SPECULAR_COLOR),

		/* texture3D */
		TABLE_ENTRY(GL, PACK_SKIP_IMAGES),
		TABLE_ENTRY(GL, PACK_IMAGE_HEIGHT),
		TABLE_ENTRY(GL, UNPACK_SKIP_IMAGES),
		TABLE_ENTRY(GL, UNPACK_IMAGE_HEIGHT),
		TABLE_ENTRY(GL, TEXTURE_3D),
		TABLE_ENTRY(GL, PROXY_TEXTURE_3D),
		TABLE_ENTRY(GL, TEXTURE_DEPTH),
		TABLE_ENTRY(GL, TEXTURE_WRAP_R),
		TABLE_ENTRY(GL, MAX_3D_TEXTURE_SIZE),

		/* texture_edge_clamp */
		TABLE_ENTRY(GL, CLAMP_TO_EDGE),
		TABLE_ENTRY(GL, CLAMP_TO_BORDER),

		/* texture_lod */
		TABLE_ENTRY(GL, TEXTURE_MIN_LOD),
		TABLE_ENTRY(GL, TEXTURE_MAX_LOD),
		TABLE_ENTRY(GL, TEXTURE_BASE_LEVEL),
		TABLE_ENTRY(GL, TEXTURE_MAX_LEVEL),

		/* GetTarget1_2 */
		TABLE_ENTRY(GL, SMOOTH_POINT_SIZE_RANGE),
		TABLE_ENTRY(GL, SMOOTH_POINT_SIZE_GRANULARITY),
		TABLE_ENTRY(GL, SMOOTH_LINE_WIDTH_RANGE),
		TABLE_ENTRY(GL, SMOOTH_LINE_WIDTH_GRANULARITY),
		TABLE_ENTRY(GL, ALIASED_POINT_SIZE_RANGE),
		TABLE_ENTRY(GL, ALIASED_LINE_WIDTH_RANGE),

		TABLE_ENTRY(GL, TEXTURE0),
		TABLE_ENTRY(GL, TEXTURE1),
		TABLE_ENTRY(GL, TEXTURE2),
		TABLE_ENTRY(GL, TEXTURE3),
		TABLE_ENTRY(GL, TEXTURE4),
		TABLE_ENTRY(GL, TEXTURE5),
		TABLE_ENTRY(GL, TEXTURE6),
		TABLE_ENTRY(GL, TEXTURE7),
		TABLE_ENTRY(GL, TEXTURE8),
		TABLE_ENTRY(GL, TEXTURE9),
		TABLE_ENTRY(GL, TEXTURE10),
		TABLE_ENTRY(GL, TEXTURE11),
		TABLE_ENTRY(GL, TEXTURE13),
		TABLE_ENTRY(GL, TEXTURE14),
		TABLE_ENTRY(GL, TEXTURE15),
		TABLE_ENTRY(GL, TEXTURE16),
		TABLE_ENTRY(GL, TEXTURE17),
		TABLE_ENTRY(GL, TEXTURE18),
		TABLE_ENTRY(GL, TEXTURE19),
		TABLE_ENTRY(GL, TEXTURE20),
		TABLE_ENTRY(GL, TEXTURE21),
		TABLE_ENTRY(GL, TEXTURE22),
		TABLE_ENTRY(GL, TEXTURE23),
		TABLE_ENTRY(GL, TEXTURE24),
		TABLE_ENTRY(GL, TEXTURE25),
		TABLE_ENTRY(GL, TEXTURE26),
		TABLE_ENTRY(GL, TEXTURE27),
		TABLE_ENTRY(GL, TEXTURE28),
		TABLE_ENTRY(GL, TEXTURE29),
		TABLE_ENTRY(GL, TEXTURE30),
		TABLE_ENTRY(GL, TEXTURE31),
		TABLE_ENTRY(GL, ACTIVE_TEXTURE),
		TABLE_ENTRY(GL, CLIENT_ACTIVE_TEXTURE),
		TABLE_ENTRY(GL, MAX_TEXTURE_UNITS),

		TABLE_ENTRY(GL, COMBINE),
		TABLE_ENTRY(GL, COMBINE_RGB),
		TABLE_ENTRY(GL, COMBINE_ALPHA),
		TABLE_ENTRY(GL, RGB_SCALE),
		TABLE_ENTRY(GL, ADD_SIGNED),
		TABLE_ENTRY(GL, INTERPOLATE),
		TABLE_ENTRY(GL, CONSTANT),
		TABLE_ENTRY(GL, PRIMARY_COLOR),
		TABLE_ENTRY(GL, PREVIOUS),
		TABLE_ENTRY(GL, SUBTRACT),

		TABLE_ENTRY(GL, SRC0_RGB),
		TABLE_ENTRY(GL, SRC1_RGB),
		TABLE_ENTRY(GL, SRC0_ALPHA),
		TABLE_ENTRY(GL, SRC1_ALPHA),
		TABLE_ENTRY(GL, SRC2_ALPHA),

		/* Obsolete */
		TABLE_ENTRY(GL, SOURCE0_RGB),
		TABLE_ENTRY(GL, SOURCE1_RGB),
		TABLE_ENTRY(GL, SOURCE2_RGB),
		TABLE_ENTRY(GL, SOURCE0_ALPHA),
		TABLE_ENTRY(GL, SOURCE1_ALPHA),
		TABLE_ENTRY(GL, SOURCE2_ALPHA),

		TABLE_ENTRY(GL, OPERAND0_RGB),
		TABLE_ENTRY(GL, OPERAND1_RGB),
		TABLE_ENTRY(GL, OPERAND2_RGB),
		TABLE_ENTRY(GL, OPERAND0_ALPHA),
		TABLE_ENTRY(GL, OPERAND1_ALPHA),
		TABLE_ENTRY(GL, OPERAND2_ALPHA),

		TABLE_ENTRY(GL, DOT3_RGB),
		TABLE_ENTRY(GL, DOT3_RGBA),

		TABLE_ENTRY(GL, TRANSPOSE_MODELVIEW_MATRIX),
		TABLE_ENTRY(GL, TRANSPOSE_PROJECTION_MATRIX),
		TABLE_ENTRY(GL, TRANSPOSE_TEXTURE_MATRIX),
		TABLE_ENTRY(GL, TRANSPOSE_COLOR_MATRIX),

		TABLE_ENTRY(GL, NORMAL_MAP),
		TABLE_ENTRY(GL, REFLECTION_MAP),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP),
		TABLE_ENTRY(GL, TEXTURE_BINDING_CUBE_MAP),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_POSITIVE_X),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_NEGATIVE_X),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_POSITIVE_Y),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_NEGATIVE_Y),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_POSITIVE_Z),
		TABLE_ENTRY(GL, TEXTURE_CUBE_MAP_NEGATIVE_Z),
		TABLE_ENTRY(GL, PROXY_TEXTURE_CUBE_MAP),
		TABLE_ENTRY(GL, MAX_CUBE_MAP_TEXTURE_SIZE),

		TABLE_ENTRY(GL, COMPRESSED_ALPHA),
		TABLE_ENTRY(GL, COMPRESSED_LUMINANCE),
		TABLE_ENTRY(GL, COMPRESSED_LUMINANCE_ALPHA),
		TABLE_ENTRY(GL, COMPRESSED_INTENSITY),
		TABLE_ENTRY(GL, COMPRESSED_RGB),
		TABLE_ENTRY(GL, COMPRESSED_RGBA),
		TABLE_ENTRY(GL, TEXTURE_COMPRESSION_HINT),
		TABLE_ENTRY(GL, TEXTURE_COMPRESSED_IMAGE_SIZE),
		TABLE_ENTRY(GL, TEXTURE_COMPRESSED),
		TABLE_ENTRY(GL, NUM_COMPRESSED_TEXTURE_FORMATS),
		TABLE_ENTRY(GL, COMPRESSED_TEXTURE_FORMATS),

		TABLE_ENTRY(GL, MULTISAMPLE),
		TABLE_ENTRY(GL, SAMPLE_ALPHA_TO_COVERAGE),
		TABLE_ENTRY(GL, SAMPLE_ALPHA_TO_ONE),
		TABLE_ENTRY(GL, SAMPLE_COVERAGE),
		TABLE_ENTRY(GL, SAMPLE_BUFFERS),
		TABLE_ENTRY(GL, SAMPLES),
		TABLE_ENTRY(GL, SAMPLE_COVERAGE_VALUE),
		TABLE_ENTRY(GL, SAMPLE_COVERAGE_INVERT),
		TABLE_ENTRY(GL, MULTISAMPLE_BIT),

		TABLE_ENTRY(GL, DEPTH_COMPONENT16),
		TABLE_ENTRY(GL, DEPTH_COMPONENT24),
		TABLE_ENTRY(GL, DEPTH_COMPONENT32),
		TABLE_ENTRY(GL, TEXTURE_DEPTH_SIZE),
		TABLE_ENTRY(GL, DEPTH_TEXTURE_MODE),

		TABLE_ENTRY(GL, TEXTURE_COMPARE_MODE),
		TABLE_ENTRY(GL, TEXTURE_COMPARE_FUNC),
		TABLE_ENTRY(GL, COMPARE_R_TO_TEXTURE),

		/* occlusion_query */
		TABLE_ENTRY(GL, QUERY_COUNTER_BITS),
		TABLE_ENTRY(GL, CURRENT_QUERY),
		TABLE_ENTRY(GL, QUERY_RESULT),
		TABLE_ENTRY(GL, QUERY_RESULT_AVAILABLE),
		TABLE_ENTRY(GL, SAMPLES_PASSED),

		TABLE_ENTRY(GL, FOG_COORD),
		TABLE_ENTRY(GL, FRAGMENT_DEPTH),
		TABLE_ENTRY(GL, CURRENT_FOG_COORD),
		TABLE_ENTRY(GL, FOG_COORD_ARRAY_TYPE),
		TABLE_ENTRY(GL, FOG_COORD_ARRAY_STRIDE),
		TABLE_ENTRY(GL, FOG_COORD_ARRAY_POINTER),
		TABLE_ENTRY(GL, FOG_COORD_ARRAY),

		/* Obsolete */
		TABLE_ENTRY(GL, FOG_COORDINATE_SOURCE),
		TABLE_ENTRY(GL, FOG_COORDINATE),
		TABLE_ENTRY(GL, CURRENT_FOG_COORDINATE),
		TABLE_ENTRY(GL, FOG_COORDINATE_ARRAY_TYPE),
		TABLE_ENTRY(GL, FOG_COORDINATE_ARRAY_STRIDE),
		TABLE_ENTRY(GL, FOG_COORDINATE_ARRAY_POINTER),
		TABLE_ENTRY(GL, FOG_COORDINATE_ARRAY),

		TABLE_ENTRY(GL, COLOR_SUM),
		TABLE_ENTRY(GL, CURRENT_SECONDARY_COLOR),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY_SIZE),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY_TYPE),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY_STRIDE),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY_POINTER),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY),

		TABLE_ENTRY(GL, POINT_SIZE_MIN),
		TABLE_ENTRY(GL, POINT_SIZE_MAX),
		TABLE_ENTRY(GL, POINT_FADE_THRESHOLD_SIZE),
		TABLE_ENTRY(GL, POINT_DISTANCE_ATTENUATION),

		TABLE_ENTRY(GL, BLEND_DST_RGB),
		TABLE_ENTRY(GL, BLEND_SRC_RGB),
		TABLE_ENTRY(GL, BLEND_DST_ALPHA),
		TABLE_ENTRY(GL, BLEND_SRC_ALPHA),

		TABLE_ENTRY(GL, GENERATE_MIPMAP),
		TABLE_ENTRY(GL, GENERATE_MIPMAP_HINT),

		TABLE_ENTRY(GL, INCR_WRAP),
		TABLE_ENTRY(GL, DECR_WRAP),

		TABLE_ENTRY(GL, MIRRORED_REPEAT),

		TABLE_ENTRY(GL, MAX_TEXTURE_LOD_BIAS),
		TABLE_ENTRY(GL, TEXTURE_FILTER_CONTROL),
		TABLE_ENTRY(GL, TEXTURE_LOD_BIAS),

		/* vertex_buffer_object */
		TABLE_ENTRY(GL, ARRAY_BUFFER),
		TABLE_ENTRY(GL, ELEMENT_ARRAY_BUFFER),
		TABLE_ENTRY(GL, ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, ELEMENT_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, VERTEX_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, NORMAL_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, COLOR_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, INDEX_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, TEXTURE_COORD_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, EDGE_FLAG_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, SECONDARY_COLOR_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, FOG_COORD_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, WEIGHT_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, VERTEX_ATTRIB_ARRAY_BUFFER_BINDING),
		TABLE_ENTRY(GL, STREAM_DRAW),
		TABLE_ENTRY(GL, STREAM_READ),
		TABLE_ENTRY(GL, STREAM_COPY),
		TABLE_ENTRY(GL, STATIC_DRAW),
		TABLE_ENTRY(GL, STATIC_READ),
		TABLE_ENTRY(GL, STATIC_COPY),
		TABLE_ENTRY(GL, DYNAMIC_DRAW),
		TABLE_ENTRY(GL, DYNAMIC_READ),
		TABLE_ENTRY(GL, DYNAMIC_COPY),
		TABLE_ENTRY(GL, READ_ONLY),
		TABLE_ENTRY(GL, WRITE_ONLY),
		TABLE_ENTRY(GL, READ_WRITE),
		TABLE_ENTRY(GL, BUFFER_SIZE),
		TABLE_ENTRY(GL, BUFFER_USAGE),
		TABLE_ENTRY(GL, BUFFER_ACCESS),
		TABLE_ENTRY(GL, BUFFER_MAPPED),
		TABLE_ENTRY(GL, BUFFER_MAP_POINTER),
		
		/*GL_ARB_texture_rectangle*/
		TABLE_ENTRY(GL, TEXTURE_RECTANGLE_ARB),
		TABLE_ENTRY(GL, TEXTURE_BINDING_RECTANGLE_ARB),
		TABLE_ENTRY(GL, PROXY_TEXTURE_RECTANGLE_ARB),
		TABLE_ENTRY(GL, MAX_RECTANGLE_TEXTURE_SIZE_ARB),
		
		/* Obsolete */
		TABLE_ENTRY(GL, FOG_COORDINATE_ARRAY_BUFFER_BINDING),
		{ 0, 0}
};

#endif


